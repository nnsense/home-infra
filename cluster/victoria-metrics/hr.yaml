---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vm
  namespace: victoria-metrics
spec:
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: '0.14.17'
      sourceRef:
        kind: HelmRepository
        name: vm-charts
        namespace: flux-system
  interval: 1h0m0s
  targetNamespace: victoria-metrics
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  valuesFrom:
    - kind: Secret
      name: vm-secrets
  values:
    fullnameOverride: stack
    experimentalDashboardsEnabled: false
    grafana:
      ingress:
        enabled: true
        hosts:
          - gf.sko.ai
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          searchNamespace: ALL
      grafana.ini:
        auth.anonymous:
          enabled: true
          org_role: Editor
    alertmanager:
      ingress:
        enabled: true
        hosts:
          - am.sko.ai
      spec:
        externalURL: "https://am.sko.ai"
      config:
        route:
          routes:
          - match:
              alertname: 'Watchdog'
            receiver: 'devnull'
          - match:
              alertname: 'InfoInhibitor'
            receiver: 'devnull'
          - matchers:
              - severity=~"warning|critical"
            receiver: slack-monitoring
        receivers:
          - name: 'devnull'
          - name: "slack-monitoring"
            slack_configs:
              - channel: "#alerts"
                send_resolved: true
                title: '{{ template "slack.monzo.title" . }}'
                icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
                color: '{{ template "slack.monzo.color" . }}'
                text: '{{ template "slack.monzo.text" . }}'
    vmsingle:
      spec:
        resources:
          limits:
            cpu: 1500m
            memory: 2Gi
          requests:
            cpu: 480m
            memory: 960Mi
      ingress:
        enabled: true
        hosts:
          - vms.sko.ai
    vmalert:
      ingress:
        enabled: true
        hosts:
          - va.sko.ai
    vmagent:
      spec:
        scrapeInterval: 60s
      ingress:
        enabled: true
        hosts:
          - vm.sko.ai
    # Remove useless high cardinality shm mounts
    prometheus-node-exporter:
      vmServiceScrape:
        spec:
          endpoints:
            - port: metrics
              metricRelabelConfigs:
                - action: drop
                  source_labels: [mountpoint]
                  regex: "/run/containerd/.+"
