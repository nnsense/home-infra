# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
# TODO depends
# TODO photos mount
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      interval: 1h
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  values:
    # For intel iGPU
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/arch: amd64
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.101.0@sha256:0097562444db38ebd2e5f98e71bd27dc6dd69b7f786207f7d323febbf99b8f93
            command: [./start-server.sh]
            env: &env
              REDIS_HOSTNAME: immich-redis
              DB_HOSTNAME: immich-postgres
              DB_DATABASE_NAME: immich
              DB_USERNAME: immich
              DB_PASSWORD: immich
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext:
              readOnlyRootFilesystem: true
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.101.0@sha256:0097562444db38ebd2e5f98e71bd27dc6dd69b7f786207f7d323febbf99b8f93
            command: [./start-microservices.sh]
            env: *env
            resources:
            securityContext:
              readOnlyRootFilesystem: true
            resources:
              limits:
                cpu: 2
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 250Mi
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.101.0@sha256:b0a22ca87496019f495ed5ce89df08da237e0987d389376b435b2226a8c29463
            env: *env
            securityContext:
              readOnlyRootFilesystem: true
            resources:
              limits:
                cpu: 2
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 250Mi
      redis:
        containers:
          app:
            image:
              repository: registry.hub.docker.com/library/redis
              tag: 7.2-alpine@sha256:7635b0bfdd7dd8552b4b31d6541fef07b734614045b45a52fd5cc27c9dada9e2
            securityContext:
              readOnlyRootFilesystem: true
            resources:
              limits:
                cpu: 2
                memory: 2Gi
              requests:
                cpu: 10m
                memory: 250Mi
        statefulset:
          podManagementPolicy: Parallel
        type: statefulset

      postgres:
        containers:
          app:
            env:
              POSTGRES_USER: immich
              POSTGRES_PASSWORD: immich
              POSTGRES_DB: immich
            image:
              repository: registry.hub.docker.com/tensorchord/pgvecto-rs
              tag: pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
            resources:
              limits:
                cpu: 2
                memory: 2Gi
              requests:
                cpu: 50m
                memory: 250Mi
        statefulset:
          podManagementPolicy: Parallel
          volumeClaimTemplates:
          - accessMode: ReadWriteOnce
            globalMounts:
            - path: /var/lib/postgresql/data
            name: pgdata
            size: 1Mi
        type: statefulset


    persistence:
      upload:
        type: nfs
        server: syno.sko.ai
        path: /volume3/k8s-volumes/immich
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
          microservices:
            app:
              - path: /usr/src/app/upload
      photos:
        type: nfs
        server: syno.sko.ai
        path: /volume3/photo
        advancedMounts:
          server:
            app:
              - path: /mnt/syno-photos
                readOnly: true
          microservices:
            app:
              - path: /mnt/syno-photos
                readOnly: true
      model-cache:
        type: emptyDir
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
#      dri:
#        type: hostPath
#        hostPath: /dev/dri
#        advancedMounts:
#          microservices:
#            app:
#              - path: /dev/dri
      tmp:
        type: emptyDir

    service:
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        controller: server
        ports:
          http:
            port: 3001
      postgres:
        controller: postgres
        ports:
          http:
            port: 5432
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    ingress:
      immich:
        enabled: true
        hosts:
          - host: immich.sko.ai
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
