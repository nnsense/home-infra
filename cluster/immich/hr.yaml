# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
  annotations:
    patch.sko.ai/app-template: common
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      interval: 1h
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  values:
    # For intel iGPU
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/arch: amd64
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      shareProcessNamespace: true
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.128.0@sha256:3306cbb62e5ac5fd1449b0a92990686b6795afa7bed7fd9aec8fb81c978dec91
            env:
              !!merge <<: &env-common
                REDIS_HOSTNAME: immich-redis
                DB_HOSTNAME: immich-postgres
                DB_DATABASE_NAME: immich
                DB_USERNAME: immich
                DB_PASSWORD: immich
              IMMICH_WORKERS_INCLUDE: &server-include 'api'
            securityContext: &security
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              limits:
                memory: 360Mi
              requests:
                cpu: 65m
                memory: 360Mi
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.128.0@sha256:3306cbb62e5ac5fd1449b0a92990686b6795afa7bed7fd9aec8fb81c978dec91
            env:
              !!merge <<: *env-common
              IMMICH_WORKERS_EXCLUDE: *server-include
            securityContext: *security
            resources:
              limits:
                memory: 1050Mi
              requests:
                cpu: 50m
                memory: 1050Mi
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.128.0@sha256:8011358f5bd474d72b08a9dc1ad38f4c763ef0e4ebbc6012fd6141801268f141
            env:
              !!merge <<: *env-common
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext: *security
            resources:
              limits:
                memory: 1860Mi
              requests:
                cpu: 70m
                memory: 1860Mi
      redis:
        containers:
          app:
            image:
              repository: registry.hub.docker.com/library/redis
              tag: 7.4-alpine@sha256:02419de7eddf55aa5bcf49efb74e88fa8d931b4d77c07eff8a6b2144472b6952
            securityContext: *security
            args: [--save, '', --appendonly, 'no']
            resources:
              limits:
                memory: 140Mi
              requests:
                cpu: 10m
                memory: 140Mi
        statefulset:
          podManagementPolicy: Parallel
        type: statefulset
      postgres:
        containers:
          app:
            env:
              POSTGRES_USER: immich
              POSTGRES_PASSWORD: immich
              POSTGRES_DB: immich
            image:
              repository: registry.hub.docker.com/tensorchord/pgvecto-rs
              tag: pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
            resources:
              limits:
                memory: 550Mi
              requests:
                cpu: 10m
                memory: 550Mi
        statefulset:
          podManagementPolicy: Parallel
          volumeClaimTemplates:
            - accessMode: ReadWriteOnce
              globalMounts:
                - path: /var/lib/postgresql/data
              name: pgdata
              size: 1Mi
        type: statefulset
    persistence:
      upload:
        type: nfs
        server: syno.sko.ai
        path: /volume3/k8s-volumes/immich
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
          microservices:
            app:
              - path: /usr/src/app/upload
      photos:
        type: nfs
        server: syno.sko.ai
        path: /volume3/photo
        advancedMounts:
          server:
            app:
              - path: /mnt/syno-photos
                readOnly: true
          microservices:
            app:
              - path: /mnt/syno-photos
                readOnly: true
      model-cache:
        type: emptyDir
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmp:
        type: emptyDir
    service:
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        controller: server
        ports:
          http:
            port: 2283
      postgres:
        controller: postgres
        ports:
          http:
            port: 5432
      redis:
        controller: redis
        ports:
          http:
            port: 6379
    ingress:
      immich:
        className: haproxy-external
        hosts:
          - host: immich.sko.ai
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
